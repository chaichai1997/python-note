1. python3 源文件以UTF-8编码，所有字符串都是unicode字符串，也可指定不同编码格式。# -*- coding: cp-1252 -*-
2. 单条语句很长时，可以使用反斜杠实现多行语句
3. python中单引号与双引号使用完全相同
4. 使用空行分隔两端不同功能的代码
5. print输出是默认换行的，如果要实现不换行需要在末尾加上 end=''
6. set集合，由一个或多个形态各异的大小整体组成，创建一个空的集合必须使用set()
7. / 除法 %取模，返回除法的余数  //取整，除法向下取整
8. Python位运算符：& 按位与 | 按位或 ^按位异或 ~按位取反 << 左移  >>右移
9. 随机函数 choice(seq) 从序列中随机挑选； randrange（start, stop, step) ; random(); uniform(x,y)随机生成一个实数，在[x,y]范围内
10. 三角函数： acos(x) x的反余弦弧度制; hypot(x,y) 欧几里得范数sqrt(xx+yy); degress(x) 弧度转化为角度; radians(X) 角度转为弧度
11. 字符串格式化输出  %c 字符及其ASCII码 % s 字符串
12. """ """ 允许一个字符串跨多行，其中可包括换行符、制表符以及其他特殊字符。
13. 列表 list = [] list.append() 在列表中遍历时，索引位置和对应值可以使用enumerate()函数同时得到 for i,v in enumerate(list)
	遍历多个序列可以使用zip() for i in zip(list1, list2)
14. 元组 tuple = () 
15. 字典 dict = {} 在字典中遍历时，关键字和值可以使用items同时解读 for k,v in dict.items
15. 结合 s = set() s.add() s.discard(x) 删除集合指定元素
16. python中没有do...while循环
17. python迭代器 iter()  next()返回下一个迭代器对象 
    python生成器 yield() 简单理解为一个迭代器
18. python中可变对象与不可变对象
	传不可变对象：整数，字符串，数组 修改的是复制的对象，不会影响a本身
	传可变对象:列表，字典， 修改后外部变量也会受影响
19. 列表可以修改，而字符串和元组不能 列表可以当作栈使用 list.append() 入栈; list.pop() 出栈
20. dir()可以找到引用的模块内定义所有名称
21. 目录中只有包含init.py 文件时才会被认作是一个包
22. python 文件打开 open(path, mode) mode:
	r 只读方式 rb 二进制只读  r+ 读写  rb+ 二进制读写
	w 只写方式 wb 二进制写入  w+ 读写  wb+ 二进制读写 (从头开始编辑，原内容被删除)
	a 追加写入 ab 二进制追加  a+ 读写  ab+ 二进制读写 (文件尾部追加)
23. python 错误与异常 SyntaxError语法错误(解析错) TypeError异常(运行期检测到的)
24. 异常处理
	try:
	except:
	finally:
	执行try中子句 无异常则跳过except 出现异常则执行except中语句 finally 无论任何情况下都会执行
25. 命名空间: 局部命名空间->全局命名空间->内置命名空间
26. os模块 包含操作系统相关函数 os.getcwd() #获取工作目录 os.chdir() # 修改工作目录
	shutil模块 针对文件和目录的管理 shutil.copy() shutil.move()
	glob模块 提供函数用于从目录通配符中搜索匹配的文件列表
	re模块 正则表达式 用于处理复杂匹配 re.findall() re.sub
	math模块 数学运算
	random模块 生成随机数的工具
	urllib.request 互联网及处理网络通信协议
	datatime 时间日期
	zlib 数据打包与压缩
	timeit 性能度量
27. python读入多行数据
	while True:
		try:
			year, month = map(int, input().spilt)   # map映射，返回一个迭代器
		except:
			break
28. Python 子类继承父类构造函数
	子类重写了init函数的情况下，实例化子类时就不会调用父类的构造函数
	子类不重写的情况况下，会自动调用父类定义的init
29. time clock() 以浮点数计算的秒数返回当前CPU时间
	unix：返回进程时间
	windows：返回的是进程运行的实际时间(第一次) t_0
	         自第一次调用以后到现在的运行时间(第二次) t_1
			 t_1- t_0  实际运行实际
30. time.mktime()接收struct_time对象作为参数，返回用秒数来表示时间的浮点数
31. all() 函数判断可迭代对象的所有元素是否为True,当元素中出现0、False,''时返回False
    any() 函数判断可迭代对象的所有元素是否包含True，有则返回True
32. bin() 将对象转换为二进制表示
    chr() 整数-> ASCII
	float() 整数/字符串 -> 浮点数
	hash()  对象-> Hash值
	hex()  数字-> 16进制
	id()  对象-> 内存地址
	int()  对象-> 整型
	list() 对象-> 列表
	oct()   整数-> 8进制
33. Python classmethod修饰符
	修饰符对应的函数不需要实例化，不需要self参数，但函数的第一个参数要是表示类本身的cls参数
	staticmethod修饰符 @staticmethod 
	修饰符对应的方法为静态方法，静态方法无需类实例化也可调用
34. compile 创建一个复数 complex(1, 2) -> 1+2j
35. dir() 返回当前范围的变量、方法和定义的类型列表
36. divmod(a, b) 返回元组(a//b, a%b)
37. eval() 执行一个字符串表达式
	exec() 执行存储在字符串或文件中的python语句
38. filter() 过滤序列
39. format() 格式化函数
	“{}{}”.format("hello", "word")
40. globals()  返回当前位置的全部全局变量
	locals()   返回当前位置的全部局部变量
41. 类的相关方法
	hasattr(object, name) # 判断对象是否含有相关属性
	getattr(object, name) # 返回一个对象属性值
	setattr(object, name, value)  # 设置属性值
42. help()  # 查看函数或模块的详细说明
43. isinstance(object, type) # 判断一个对象是否是一个已知的类型
    issubclass(class, classinfo) # 判断参数class是否是类型参数classinfo的子类
44. iter() 生成迭代器
    a = [1, 2, 3]
	for i in iter(a):  # 生成迭代器
		print(i)
	print在2.X版本中是一个关键字，在3.X版本中是一个函数
45. sort() 只应用在list上的方法，是对已存在的列表上进行操作
    sorted() 可应用在所有可迭代的对象上，返回一个新对象，不改变原对象
	
	