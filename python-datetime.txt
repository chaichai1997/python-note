python time模块
1. time.time 从1970.1.1 到当前时间的间隔
2. python时间元组
	(tm_year, tm_mon, tm_mday, tm_hour, tm_min, tm_sec, tm_wday(一周的第几日), tm_yday， tm_isdst)
	 四位      1-12    1-31    0-23     0-59    0-61      0-6                    0-366     1/0/-1
3. time.localtime(time.time())  获取当前时间
4. time.asctime(time.localtime(time.time())) 获取格式化的时间
5. time.strftime(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()))  格式化日期
6. Python时间日期格式化符号：
   %y 两位数的年份表示（00-99）
   %Y 四位数的年份表示（000-9999）
   %m 月份（01-12）
   %d 月内中的一天（0-31）
   %H 24小时制小时数（0-23）
   %I 12小时制小时数（01-12）
   %M 分钟数（00=59）
   %S 秒（00-59）
   %a 本地简化星期名称
   %A 本地完整星期名称
   %b 本地简化的月份名称
   %B 本地完整的月份名称
   %c 本地相应的日期表示和时间表示
   %j 年内的一天（001-366）
   %p 本地A.M.或P.M.的等价符
   %U 一年中的星期数（00-53）星期天为星期的开始
   %w 星期（0-6），星期天为星期的开始
   %W 一年中的星期数（00-53）星期一为星期的开始
   %x 本地相应的日期表示
   %X 本地相应的时间表示
   %Z 当前时区的名称
   %% %号本身
Python Calendar模块
1. Calendar模块的函数都是与日历相关的
   calendar.calendar(year,w=2,l=1,c=6) # 多行字符串格式的年历
   calendar.firstweekday()  # 当前每周的起始日期
   calendar.isleap(year)    # 是否为瑞年
   calendar.leapdays(y1,y2) 时间段内的瑞年总数
   calendar.month(year,month,w=2,l=1) 
   calendar.weekday(year,month,day) 返回给定日期的日期码
 